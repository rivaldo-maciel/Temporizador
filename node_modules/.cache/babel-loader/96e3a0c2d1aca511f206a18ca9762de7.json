{"ast":null,"code":"var _jsxFileName = \"/home/rivaldo/\\xC1rea de Trabalho/Timer/timer-aulas/src/Timer.js\";\nimport React from \"react\";\nimport Beep from './sounds/mixkit-alarm-digital-clock-beep-989.wav';\nimport Music from './sounds/Michael_Jackson_-_Smooth_Criminal_[NaijaGreen (mp3cut.net).mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      maxTime: 0,\n      minutes1: 0,\n      minutes2: 0,\n      seconds1: 0,\n      seconds2: 0,\n      audio: new Audio(Music),\n      beep: new Audio(Beep)\n    };\n    this.setTime = this.setTime.bind(this);\n    this.runTimeSeconds1 = this.runTimeSeconds1.bind(this);\n    this.runTimeSeconds2 = this.runTimeSeconds2.bind(this);\n    this.runTimeMinutes2 = this.runTimeMinutes2.bind(this);\n    this.runTimeMinutes1 = this.runTimeMinutes1.bind(this);\n    this.clearTime = this.clearTime.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      audio\n    } = this.state;\n    audio.play();\n    this.setTime();\n    this.runTimeSeconds2();\n  }\n\n  componentDidUpdate() {\n    const {\n      minutes1,\n      minutes2,\n      seconds1,\n      seconds2,\n      maxTime\n    } = this.state;\n\n    if (seconds2 > 9) {\n      this.runTimeSeconds1();\n    }\n\n    if (seconds1 > 5) {\n      this.runTimeMinutes2();\n    }\n\n    if (minutes2 > 9) {\n      this.runTimeMinutes1();\n    }\n\n    if (minutes2 === parseInt(maxTime, 10) || minutes1 === parseInt(maxTime, 10)) {\n      this.clearTime();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.idInterval);\n    const {\n      audio,\n      beep\n    } = this.state;\n    audio.pause();\n    beep.pause();\n  }\n\n  clearTime() {\n    const {\n      audio,\n      beep\n    } = this.state;\n    clearInterval(this.idInterval);\n    audio.pause();\n    beep.play();\n  }\n\n  setTime() {\n    const {\n      time\n    } = this.props;\n    this.setState({\n      maxTime: time\n    });\n  }\n\n  runTimeSeconds2() {\n    this.idInterval = setInterval(() => {\n      this.setState(prevState => ({\n        seconds2: prevState.seconds2 + 1\n      }));\n    }, 1000);\n  }\n\n  runTimeSeconds1() {\n    this.setState({\n      seconds2: 0\n    });\n    this.setState(prevstate => ({\n      seconds1: prevstate.seconds1 + 1\n    }));\n  }\n\n  runTimeMinutes2() {\n    this.setState({\n      seconds1: 0\n    });\n    this.setState(prevstate => ({\n      minutes2: prevstate.minutes2 + 1\n    }));\n  }\n\n  runTimeMinutes1() {\n    this.setState({\n      minutes2: 0\n    });\n    this.setState(prevState => ({\n      minutes1: prevState.minutes1 + 1\n    }));\n  }\n\n  render() {\n    const {\n      minutes1,\n      minutes2,\n      seconds1,\n      seconds2,\n      maxTime\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"gif\",\n        src: \"https://c.tenor.com/zdY-7id1E-UAAAAi/dance-dance-move.gif\",\n        alt: \"gif-mario-jackson\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timer-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: maxTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [minutes1, minutes2, \":\", seconds1, seconds2]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/home/rivaldo/Área de Trabalho/Timer/timer-aulas/src/Timer.js"],"names":["React","Beep","Music","Timer","Component","constructor","state","maxTime","minutes1","minutes2","seconds1","seconds2","audio","Audio","beep","setTime","bind","runTimeSeconds1","runTimeSeconds2","runTimeMinutes2","runTimeMinutes1","clearTime","componentDidMount","play","componentDidUpdate","parseInt","componentWillUnmount","clearInterval","idInterval","pause","time","props","setState","setInterval","prevState","prevstate","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Beep from './sounds/mixkit-alarm-digital-clock-beep-989.wav'\nimport Music from './sounds/Michael_Jackson_-_Smooth_Criminal_[NaijaGreen (mp3cut.net).mp3'\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      maxTime: 0,\n      minutes1: 0,\n      minutes2: 0,\n      seconds1: 0,\n      seconds2: 0,\n      audio: new Audio(Music),\n      beep: new Audio(Beep),\n    }\n    this.setTime = this.setTime.bind(this);\n    this.runTimeSeconds1 = this.runTimeSeconds1.bind(this);\n    this.runTimeSeconds2 = this.runTimeSeconds2.bind(this);\n    this.runTimeMinutes2 = this.runTimeMinutes2.bind(this);\n    this.runTimeMinutes1 = this.runTimeMinutes1.bind(this);\n    this.clearTime = this.clearTime.bind(this);\n  }\n  componentDidMount() {\n    const { audio } = this.state;\n    audio.play();\n    this.setTime();\n    this.runTimeSeconds2();\n  }\n\n  componentDidUpdate() {\n    const { minutes1, minutes2, seconds1, seconds2, maxTime } = this.state;\n    if (seconds2 > 9) {\n      this.runTimeSeconds1();\n    }\n    if (seconds1 > 5) {\n      this.runTimeMinutes2();\n    }\n    if (minutes2 > 9) {\n      this.runTimeMinutes1();\n    }\n    if (minutes2 === parseInt(maxTime, 10) || minutes1 === parseInt(maxTime, 10)) {\n      this.clearTime();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.idInterval);\n    const { audio, beep } = this.state;\n    audio.pause();\n    beep.pause();\n\n  }\n\n  clearTime() {\n    const { audio, beep } = this.state;\n    clearInterval(this.idInterval);\n    audio.pause();\n    beep.play();\n  }\n\n  setTime() {\n    const { time } = this.props;\n    this.setState({\n      maxTime: time,\n    })\n  }\n\n  runTimeSeconds2() {\n    this.idInterval = setInterval(() => {\n      this.setState((prevState) => ({\n        seconds2: prevState.seconds2 + 1,\n      }))\n    }, 1000)\n  }\n\n  runTimeSeconds1() {\n    this.setState({seconds2: 0});\n    this.setState((prevstate) => ({\n      seconds1: prevstate.seconds1 + 1,\n    }));\n  }\n\n  runTimeMinutes2() {\n    this.setState({ seconds1: 0 });\n    this.setState((prevstate) => ({\n      minutes2: prevstate.minutes2 + 1,\n    }))\n  }\n  \n  runTimeMinutes1() {\n    this.setState({ minutes2: 0 });\n    this.setState((prevState) => ({\n      minutes1: prevState.minutes1 + 1,\n    }))\n  }\n\n  render() {\n    const { minutes1, minutes2, seconds1, seconds2, maxTime } = this.state;\n    return (\n      <>\n      <img className='gif' src='https://c.tenor.com/zdY-7id1E-UAAAAi/dance-dance-move.gif' alt='gif-mario-jackson' />\n      <div className='timer-container'>\n        <h1>{ maxTime }</h1>\n        <span>{ minutes1 }{ minutes2 }:{ seconds1 }{ seconds2 }</span>\n      </div>\n      </>\n    );\n  }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}