{"ast":null,"code":"var _jsxFileName = \"/home/rivaldo/\\xC1rea de Trabalho/Timer/timer-aulas/src/Timer.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      maxTime: 0,\n      minutes1: 0,\n      minutes2: 0,\n      seconds1: 0,\n      seconds2: 0\n    };\n    this.setTime = this.setTime.bind(this);\n    this.runTimeSeconds1 = this.runTimeSeconds1.bind(this);\n    this.runTimeSeconds2 = this.runTimeSeconds2.bind(this);\n    this.runTimeMinutes2 = this.runTimeMinutes2.bind(this);\n  }\n\n  componentDidMount() {\n    this.setTime();\n    this.runTimeSeconds2();\n  }\n\n  componentDidUpdate() {\n    const {\n      maxTime,\n      minutes1,\n      minutes2,\n      seconds1,\n      seconds2\n    } = this.state;\n\n    if (seconds2 > 9) {\n      this.runTimeSeconds1();\n    }\n\n    if (seconds1 > 5) {\n      this.runTimeMinutes2();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(10);\n  }\n\n  setTime() {\n    const {\n      time\n    } = this.props;\n    this.setState({\n      maxTime: time\n    });\n  }\n\n  runTimeSeconds2() {\n    this.idInterval = setInterval(() => {\n      this.setState(prevState => ({\n        seconds2: prevState.seconds2 + 1\n      }));\n    }, 1000);\n  }\n\n  runTimeSeconds1() {\n    this.setState({\n      seconds2: 0\n    });\n    this.setState(prevstate => ({\n      seconds1: prevstate.seconds1 + 1\n    }));\n  }\n\n  runTimeMinutes2() {\n    this.setState({\n      seconds1: 0\n    });\n    this.setState(prevstate => ({\n      minutes2: prevstate.minutes2 + 1\n    }));\n  }\n\n  render() {\n    const {\n      minutes1,\n      minutes2,\n      seconds1,\n      seconds2,\n      maxTime\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: maxTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [minutes1, minutes2, \":\", seconds1, seconds2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Timer;","map":{"version":3,"sources":["/home/rivaldo/Área de Trabalho/Timer/timer-aulas/src/Timer.js"],"names":["React","Timer","Component","constructor","state","maxTime","minutes1","minutes2","seconds1","seconds2","setTime","bind","runTimeSeconds1","runTimeSeconds2","runTimeMinutes2","componentDidMount","componentDidUpdate","componentWillUnmount","clearInterval","time","props","setState","idInterval","setInterval","prevState","prevstate","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,CADE;AAEXC,MAAAA,QAAQ,EAAE,CAFC;AAGXC,MAAAA,QAAQ,EAAE,CAHC;AAIXC,MAAAA,QAAQ,EAAE,CAJC;AAKXC,MAAAA,QAAQ,EAAE;AALC,KAAb;AAOA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKE,eAAL,GAAuB,KAAKA,eAAL,CAAqBF,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKG,eAAL,GAAuB,KAAKA,eAAL,CAAqBH,IAArB,CAA0B,IAA1B,CAAvB;AACD;;AACDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,OAAL;AACA,SAAKG,eAAL;AACD;;AAEDG,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEX,MAAAA,OAAF;AAAWC,MAAAA,QAAX;AAAqBC,MAAAA,QAArB;AAA+BC,MAAAA,QAA/B;AAAyCC,MAAAA;AAAzC,QAAsD,KAAKL,KAAjE;;AACA,QAAIK,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAKG,eAAL;AACD;;AACD,QAAIJ,QAAQ,GAAG,CAAf,EAAkB;AAChB,WAAKM,eAAL;AACD;AACF;;AAEDG,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACD;;AAEDR,EAAAA,OAAO,GAAG;AACR,UAAM;AAAES,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,SAAKC,QAAL,CAAc;AACZhB,MAAAA,OAAO,EAAEc;AADG,KAAd;AAGD;;AAEDN,EAAAA,eAAe,GAAG;AAChB,SAAKS,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAClC,WAAKF,QAAL,CAAeG,SAAD,KAAgB;AAC5Bf,QAAAA,QAAQ,EAAEe,SAAS,CAACf,QAAV,GAAqB;AADH,OAAhB,CAAd;AAGD,KAJ4B,EAI1B,IAJ0B,CAA7B;AAKD;;AAEDG,EAAAA,eAAe,GAAG;AAChB,SAAKS,QAAL,CAAc;AAACZ,MAAAA,QAAQ,EAAE;AAAX,KAAd;AACA,SAAKY,QAAL,CAAeI,SAAD,KAAgB;AAC5BjB,MAAAA,QAAQ,EAAEiB,SAAS,CAACjB,QAAV,GAAqB;AADH,KAAhB,CAAd;AAGD;;AAEDM,EAAAA,eAAe,GAAG;AAChB,SAAKO,QAAL,CAAc;AAAEb,MAAAA,QAAQ,EAAE;AAAZ,KAAd;AACA,SAAKa,QAAL,CAAeI,SAAD,KAAgB;AAC5BlB,MAAAA,QAAQ,EAAEkB,SAAS,CAAClB,QAAV,GAAqB;AADH,KAAhB,CAAd;AAGD;;AAGDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEpB,MAAAA,QAAF;AAAYC,MAAAA,QAAZ;AAAsBC,MAAAA,QAAtB;AAAgCC,MAAAA,QAAhC;AAA0CJ,MAAAA;AAA1C,QAAsD,KAAKD,KAAjE;AACA,wBACE;AAAA,8BACE;AAAA,kBAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,mBAAQC,QAAR,EAAoBC,QAApB,OAAiCC,QAAjC,EAA6CC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxEiC;;AA2EpC,eAAeR,KAAf","sourcesContent":["import React from \"react\";\n\nclass Timer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      maxTime: 0,\n      minutes1: 0,\n      minutes2: 0,\n      seconds1: 0,\n      seconds2: 0,\n    }\n    this.setTime = this.setTime.bind(this);\n    this.runTimeSeconds1 = this.runTimeSeconds1.bind(this);\n    this.runTimeSeconds2 = this.runTimeSeconds2.bind(this);\n    this.runTimeMinutes2 = this.runTimeMinutes2.bind(this);\n  }\n  componentDidMount() {\n    this.setTime();\n    this.runTimeSeconds2();\n  }\n\n  componentDidUpdate() {\n    const { maxTime, minutes1, minutes2, seconds1, seconds2 } = this.state;\n    if (seconds2 > 9) {\n      this.runTimeSeconds1();\n    }\n    if (seconds1 > 5) {\n      this.runTimeMinutes2();\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(10)\n  }\n\n  setTime() {\n    const { time } = this.props;\n    this.setState({\n      maxTime: time,\n    })\n  }\n\n  runTimeSeconds2() {\n    this.idInterval = setInterval(() => {\n      this.setState((prevState) => ({\n        seconds2: prevState.seconds2 + 1,\n      }))\n    }, 1000)\n  }\n\n  runTimeSeconds1() {\n    this.setState({seconds2: 0});\n    this.setState((prevstate) => ({\n      seconds1: prevstate.seconds1 + 1,\n    }));\n  }\n\n  runTimeMinutes2() {\n    this.setState({ seconds1: 0 });\n    this.setState((prevstate) => ({\n      minutes2: prevstate.minutes2 + 1,\n    }))\n  }\n  \n\n  render() {\n    const { minutes1, minutes2, seconds1, seconds2, maxTime } = this.state;\n    return (\n      <div>\n        <h1>{ maxTime }</h1>\n        <span>{ minutes1 }{ minutes2 }:{ seconds1 }{ seconds2 }</span>\n      </div>\n    );\n  }\n}\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}